Now you are ready to code the solution to the exercise in your chosen native build environment.
As you work use the git commands to commit to your branch and push to GitHub.
When you think you have completed the exercise you can use the continuous integration build servers to check your work. To do this you first need to create a pull-request. See create a pull request for your branch so that it can be reviewed by a senior developer.
The pull request will kick-off builds on Red Hat and Windows platforms and GitHub will mark up the results of these builds on the pull requests. Try and get each build to a green status before saying it is ready for review. As you push further commits to your branch the PR will update and new builds will kick off to check your work. Continue in this pattern until the builds pass. If you’re not sure how to resolve some errors check with another member of the team.
Before you start the exercises below it is a good idea to read this page that discusses the basic operations of working with git.
The idea of version control is that snapshots of the development history can be recorded and these states returned to if necessary. As you go through the exercises and get to a point where something is working it is a good idea to commit the changes to your new repository. On Mantid we use what are known as branches within the repository to keep track of a single piece of work. The idea is that each feature/bugfix is developed independently on a separate branch within the repository. When the work is complete, it is tested by another developer and merged within a special branch, called main. This branch is reserved code that will form part of that distributed to users. More details on Mantid’s workflow with git can be found here.
While developing the code for your exercises you will work in a separate repository here but the intention is that you will follow the workflow described in the document above and in particular using the commands described in this section. Do not use the macros yet, the aim is to understand the process by using the real commands.

